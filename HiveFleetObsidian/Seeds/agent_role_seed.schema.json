{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://hfo.example/schema/agent-role-seed.json",
  "title": "AgentRoleSeed",
  "type": "object",
  "required": ["version", "metadata", "identity", "lineage", "mission", "io", "policies", "procedure"],
  "properties": {
    "version": { "type": "string" },
    "metadata": {
      "type": "object",
      "required": ["id", "name", "version"],
      "properties": {
        "id": { "type": "string", "pattern": "^[a-z0-9_]+$" },
        "name": { "type": "string" },
        "description": { "type": "string" },
        "version": { "type": "string" }
      }
    },
    "identity": {
      "type": "object",
      "required": ["element", "archetype", "approach", "motto"],
      "properties": {
        "element": { "type": "string" },
        "archetype": { "type": "string" },
        "approach": { "type": "string" },
        "motto": { "type": "string" }
      }
    },
    "lineage": {
      "type": "object",
      "required": ["mythic", "research"],
      "properties": {
        "mythic": { "type": "array", "items": { "type": "string" } },
        "research": { "type": "array", "items": { "type": "string" } }
      }
    },
    "mission": { "type": "string" },
    "triggers": { "type": "object" },
    "scope": { "type": "object" },
    "io": {
      "type": "object",
      "required": ["inputs", "outputs"],
      "properties": {
        "inputs": {
          "type": "object",
          "required": ["fields"],
          "properties": {
            "fields": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["name", "type", "required"],
                "properties": {
                  "name": { "type": "string" },
                  "type": { "type": "string" },
                  "required": { "type": "boolean" },
                  "description": { "type": "string" }
                }
              }
            },
            "example": { "type": ["object", "array", "string", "number", "boolean", "null"] }
          }
        },
        "outputs": {
          "type": "object",
          "required": ["fields"],
          "properties": {
            "fields": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["name", "type", "required"],
                "properties": {
                  "name": { "type": "string" },
                  "type": { "type": "string" },
                  "required": { "type": "boolean" },
                  "description": { "type": "string" }
                }
              }
            },
            "example": { "type": ["object", "array", "string", "number", "boolean", "null"] }
          }
        }
      }
    },
    "tokens": { "type": "object" },
    "tools": { "type": "object" },
    "policies": {
      "type": "object",
      "required": ["guardrails", "stop_rules"],
      "properties": {
        "guardrails": { "type": "array", "items": { "type": "string" } },
        "stop_rules": { "type": "array", "items": { "type": "string" } }
      }
    },
    "equipment": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "maps_to"],
        "properties": {
          "name": { "type": "string" },
          "maps_to": { "type": ["string", "array"], "items": { "type": "string" } },
          "function": { "type": "string" },
          "mnemonic": { "type": "string" }
        }
      }
    },
    "glossary_plain": { "type": "object", "additionalProperties": { "type": "string" } },
    "procedure": {
      "type": "object",
      "required": ["steps"],
      "properties": {
        "steps": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": ["name", "description"],
            "properties": {
              "name": { "type": "string" },
              "description": { "type": "string" },
              "algorithms": { "type": "array", "items": { "type": "string" } },
              "success_criteria": { "type": "string" }
            }
          }
        }
      }
    },
    "handoffs": { "type": "object" },
    "memory": { "type": "object" },
    "quality_gates": { "type": "object" },
    "failure_modes": { "type": "array" },
    "invocation": { "type": "object" },
    "implementations": { "type": "object" }
    ,"center_of_gravity": {
      "type": "object",
      "description": "Single kernel that unifies the role's primary algorithms.",
      "required": ["name", "description"],
      "properties": {
        "name": { "type": "string", "description": "Concise technical kernel name (no metaphor-only terms)." },
        "description": { "type": "string", "description": "Plain technical summary: input focus → transformation → output." },
        "algorithms": { "type": "array", "items": { "type": "string" }, "description": "Underlying algorithm tokens bundled by this kernel." },
        "inputs": { "type": "array", "items": { "type": "string" }, "description": "Key required inputs consumed by the kernel." },
        "outputs": { "type": "array", "items": { "type": "string" }, "description": "Primary outputs produced by the kernel." }
      }
    }
  }
}
